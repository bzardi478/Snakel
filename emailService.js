// emailService.js
const nodemailer = require('nodemailer');

// Create a transporter object using the default SMTP transport for Gmail
const transporter = nodemailer.createTransport({
    service: 'gmail', // This tells Nodemailer to use Gmail's well-known SMTP settings
    auth: {
        user: process.env.EMAIL_USER, // Your Gmail address (from .env)
        pass: process.env.EMAIL_PASS  // Your Gmail App Password or regular password (from .env)
    }
});

/**
 * Sends a verification email to the specified recipient.
 * @param {string} toEmail - The email address of the recipient.
 * @param {string} verificationLink - The verification URL generated by Firebase Admin SDK.
 * @returns {Promise<{success: boolean, message: string}>} - Result of the email sending operation.
 */
async function sendVerificationEmail(toEmail, verificationLink) {
    const senderEmail = process.env.EMAIL_USER;

    if (!senderEmail) {
        console.error("Error: EMAIL_USER environment variable is not set. Cannot send email.");
        return { success: false, message: "Email sender not configured." };
    }

    const mailOptions = {
        from: `SnakeL Team <${senderEmail}>`, // Display name and sender email address
        to: toEmail,                          // Recipient email address
        subject: 'Verify your SnakeL account', // Subject line of the email
        html: `
            <p>Hello,</p>
            <p>Thank you for registering for SnakeL!</p>
            <p>Please verify your email address by clicking the link below:</p>
            <p><a href="${verificationLink}">Verify My Email</a></p>
            <p>If you did not request this, please ignore this email.</p>
            <p>Best regards,</p>
            <p>The SnakeL Team</p>
        `
    };

    try {
        let info = await transporter.sendMail(mailOptions);
        console.log('Gmail Email sent: Message ID: %s', info.messageId);
        // This is a useful URL for debugging in development if you use services like Ethereal.email
        // console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));
        return { success: true, message: 'Verification email sent via Gmail.' };
    } catch (error) {
        console.error('Error sending verification email via Gmail:', error);
        // Provide more specific error details if possible (e.g., authentication failure)
        let errorMessage = `Failed to send verification email via Gmail.`;
        if (error.code === 'EAUTH') {
            errorMessage += ' Check your EMAIL_USER and EMAIL_PASS (especially App Password for Gmail).';
        }
        return { success: false, message: `${errorMessage} Details: ${error.message}` };
    }
}

module.exports = {
    sendVerificationEmail
};